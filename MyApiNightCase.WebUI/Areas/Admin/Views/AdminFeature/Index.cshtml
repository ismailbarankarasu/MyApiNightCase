@model List<MyApiNightCase.WebUI.Areas.Admin.Models.FeatureListViewModel>
@{
    ViewData["Title"] = "Öne Çıkan Listesi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var currentPage = ViewBag.CurrentPage;
    var totalPages = ViewBag.TotalPages;
    var totalItems = ViewBag.TotalItems;
    var pageSize = ViewBag.PageSize;
}

<style>
    .pagination {
        margin-bottom: 0;
    }

    .page-link {
        color: #5D87FF;
        padding: 0.5rem 0.75rem;
    }

    .page-item.active .page-link {
        background-color: #5D87FF;
        border-color: #5D87FF;
    }

    .page-link:hover {
        color: #2c5bff;
    }

    .pagination-info {
        color: #6c757d;
        font-size: 0.875rem;
    }

    .preview-image {
        max-width: 200px;
        max-height: 200px;
        margin-top: 10px;
        border-radius: 8px;
    }

    .feature-image {
        width: 100px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }
</style>

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title fw-semibold">Öne Çıkan Listesi</h5>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addFeatureModal">
                            <i class="ti ti-plus"></i> Yeni Öne Çıkan Ekle
                        </button>
                    </div>
                    <div class="table-responsive">
                        <table class="table text-nowrap mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Görsel</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Başlık</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Açıklama</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">İşlemler</h6></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var feature in Model)
                                {
                                    <tr>
                                        <td class="border-bottom-0">
                                            <img src="@feature.ImageUrl" alt="@feature.Title" class="feature-image">
                                        </td>
                                        <td class="border-bottom-0">
                                            <h6 class="fw-semibold mb-0">@feature.Title</h6>
                                        </td>
                                        <td class="border-bottom-0">
                                            <p class="mb-0">
                                                @{
                                                    var maxLength = 70;
                                                    var description = feature.Description ?? "";
                                                    var truncatedText = description.Length > maxLength
                                                    ? description.Substring(0, maxLength) + "..."
                                                    : description;
                                                }
                                                @truncatedText
                                            </p>
                                        </td>

                                        <td class="border-bottom-0">
                                            <div class="d-flex gap-2">
                                                <button class="btn btn-warning btn-sm" onclick="showUpdateModal(@feature.FeatureId, '@feature.Title', '@feature.Description', '@feature.ImageUrl')">
                                                    <i class="ti ti-edit"></i>
                                                </button>
                                                <button class="btn btn-danger btn-sm" onclick="deleteFeature(@feature.FeatureId, '@feature.Title')">
                                                    <i class="ti ti-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (Model.Any())
                    {
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <div class="pagination-info">
                                Toplam <strong>@totalItems</strong> öne çıkan
                                <strong>@((currentPage - 1) * pageSize + 1)</strong> -
                                <strong>@Math.Min(currentPage * pageSize, totalItems)</strong>
                                arası gösteriliyor
                            </div>
                            <nav aria-label="Page navigation">
                                <ul class="pagination mb-0">
                                    @if (currentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>
                                    }

                                    @for (int i = 1; i <= totalPages; i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                        </li>
                                    }

                                    @if (currentPage < totalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Öne Çıkan Ekleme Modal -->
<div class="modal fade" id="addFeatureModal" tabindex="-1" aria-labelledby="addFeatureModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFeatureModalLabel">Yeni Öne Çıkan Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addFeatureForm">
                    <div class="mb-3">
                        <label for="title" class="form-label">Başlık</label>
                        <input type="text" class="form-control" id="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Açıklama</label>
                        <textarea class="form-control" id="description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="imageUrl" class="form-label">Görsel URL</label>
                        <input type="text" class="form-control" id="imageUrl" required>
                    </div>
                    <div class="text-center">
                        <img id="imagePreview" class="preview-image d-none" alt="Öne Çıkan Görsel">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" onclick="createFeature()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- Öne Çıkan Güncelleme Modal -->
<div class="modal fade" id="updateFeatureModal" tabindex="-1" aria-labelledby="updateFeatureModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateFeatureModalLabel">Öne Çıkan Güncelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateFeatureForm">
                    <input type="hidden" id="updateFeatureId">
                    <div class="mb-3">
                        <label for="updateTitle" class="form-label">Başlık</label>
                        <input type="text" class="form-control" id="updateTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="updateDescription" class="form-label">Açıklama</label>
                        <textarea class="form-control" id="updateDescription" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="updateImageUrl" class="form-label">Görsel URL</label>
                        <input type="text" class="form-control" id="updateImageUrl" required>
                    </div>
                    <div class="text-center">
                        <img id="updateImagePreview" class="preview-image" alt="Öne Çıkan Görsel">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" onclick="updateFeature()">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Resim önizleme için event listener'lar
    document.getElementById('imageUrl').addEventListener('input', function() {
        const preview = document.getElementById('imagePreview');
        const imageUrl = this.value;

        if (imageUrl) {
            preview.src = imageUrl;
            preview.classList.remove('d-none');
        } else {
            preview.classList.add('d-none');
        }
    });

    document.getElementById('updateImageUrl').addEventListener('input', function() {
        const preview = document.getElementById('updateImagePreview');
        const imageUrl = this.value;

        if (imageUrl) {
            preview.src = imageUrl;
            preview.classList.remove('d-none');
        } else {
            preview.classList.add('d-none');
        }
    });

    function createFeature() {
        const title = document.getElementById('title').value;
        const description = document.getElementById('description').value;
        const imageUrl = document.getElementById('imageUrl').value;

        if (!title || !description || !imageUrl) {
            Swal.fire({
                title: 'Hata!',
                text: 'Lütfen tüm alanları doldurun.',
                icon: 'error'
            });
            return;
        }

        const feature = {
            Title: title,
            Description: description,
            ImageUrl: imageUrl
        };

        $.ajax({
            url: 'https://localhost:7104/api/Feature/CreateFeature',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(feature),
            success: function(response) {
                if (response.success !== false) {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: 'Öne çıkan başarıyla eklendi.',
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        $('#addFeatureModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire(
                        'Hata!',
                        'Öne çıkan eklenirken bir hata oluştu.',
                        'error'
                    );
                }
            },
            error: function(xhr) {
                console.log('Hata Detayı:', xhr.responseText);
                Swal.fire(
                    'Hata!',
                    'Bir hata oluştu! Lütfen tüm alanları doğru formatta doldurduğunuzdan emin olun.',
                    'error'
                );
            }
        });
    }

    function showUpdateModal(featureId, title, description, imageUrl) {
        document.getElementById('updateFeatureId').value = featureId;
        document.getElementById('updateTitle').value = title;
        document.getElementById('updateDescription').value = description;
        document.getElementById('updateImageUrl').value = imageUrl;
        document.getElementById('updateImagePreview').src = imageUrl;

        new bootstrap.Modal(document.getElementById('updateFeatureModal')).show();
    }

    function updateFeature() {
        const featureId = document.getElementById('updateFeatureId').value;
        const title = document.getElementById('updateTitle').value;
        const description = document.getElementById('updateDescription').value;
        const imageUrl = document.getElementById('updateImageUrl').value;

        if (!title || !description || !imageUrl) {
            Swal.fire({
                title: 'Hata!',
                text: 'Lütfen tüm alanları doldurun.',
                icon: 'error'
            });
            return;
        }

        const feature = {
            FeatureId: parseInt(featureId),
            Title: title,
            Description: description,
            ImageUrl: imageUrl
        };

        $.ajax({
            url: 'https://localhost:7104/api/Feature/UpdateFeature',
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(feature),
            success: function(response) {
                if (response.success !== false) {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: 'Öne çıkan başarıyla güncellendi.',
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        $('#updateFeatureModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire(
                        'Hata!',
                        'Öne çıkan güncellenirken bir hata oluştu.',
                        'error'
                    );
                }
            },
            error: function(xhr) {
                console.log('Hata Detayı:', xhr.responseText);
                Swal.fire(
                    'Hata!',
                    'Bir hata oluştu! Lütfen tüm alanları doğru formatta doldurduğunuzdan emin olun.',
                    'error'
                );
            }
        });
    }

    function deleteFeature(id, title) {
        Swal.fire({
            title: 'Emin misiniz?',
            text: `"${title}" başlıklı öne çıkanı silmek istediğinize emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'İptal'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "https://localhost:7104/api/Feature/DeleteFeature?id=" + id,
                    type: 'DELETE',
                    success: function (result) {
                        if (result.success !== false) {
                            Swal.fire({
                                title: 'Başarılı!',
                                text: 'Öne çıkan başarıyla silindi.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Hata!',
                                'Öne çıkan silinirken bir hata oluştu.',
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Hata!',
                            'Bir hata oluştu!',
                            'error'
                        );
                    }
                });
            }
        });
    }
</script> 