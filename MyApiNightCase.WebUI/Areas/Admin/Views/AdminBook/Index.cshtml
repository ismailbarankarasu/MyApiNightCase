@model List<MyApiNightCase.WebUI.Dtos.BookWithAuthorListAndCategoryList>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var currentPage = ViewBag.CurrentPage;
    var totalPages = ViewBag.TotalPages;
    var totalItems = ViewBag.TotalItems;
    var pageSize = ViewBag.PageSize;
    string GetCategoryColor(string categoryName)
    {
        return categoryName?.ToLower() switch
        {
            "roman" => "bg-primary",           // Mavi
            "hikaye" => "bg-success",          // Yeşil
            "çocuk kitabı" => "bg-warning",    // Sarı
            _ => "bg-secondary"
        };
    }
}
<style>
    .category-badge {
        transition: all 0.3s ease;
        padding: 8px 15px;
        font-size: 0.85rem;
    }

        .category-badge:hover {
            transform: scale(1.1);
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

    .bg-primary {
        background-color: #0d6efd !important;
        box-shadow: 0 2px 4px rgba(13, 110, 253, 0.3);
    }

    .bg-success {
        background-color: #198754 !important;
        box-shadow: 0 2px 4px rgba(25, 135, 84, 0.3);
    }

    .bg-warning {
        background-color: #ffc107 !important;
        color: #000 !important;
        box-shadow: 0 2px 4px rgba(255, 193, 7, 0.3);
    }
    .pagination {
        margin-bottom: 0;
    }

    .page-link {
        color: #5D87FF;
        padding: 0.5rem 0.75rem;
    }

    .page-item.active .page-link {
        background-color: #5D87FF;
        border-color: #5D87FF;
    }

    .page-link:hover {
        color: #2c5bff;
    }

    .pagination-info {
        color: #6c757d;
        font-size: 0.875rem;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title fw-semibold">Kitap Listesi</h5>
                        <a href="@Url.Action("AddBook")" class="btn btn-primary">
                            <i class="ti ti-plus"></i> Yeni Kitap Ekle
                        </a>
                    </div>
                    <div class="table-responsive">
                        <table class="table text-nowrap mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Kitap</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Yazar</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Kategori</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Fiyat</h6></th>
                                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">İşlemler</h6></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var book in Model)
                                {
                                    <tr>
                                        <td class="border-bottom-0">
                                            <div class="d-flex align-items-center gap-3">
                                                <img src="@book.ImageUrl" alt="@book.BookTitle" width="45" height="45" class="rounded-circle">
                                                <h6 class="fw-semibold mb-0">@book.BookTitle</h6>
                                            </div>
                                        </td>
                                        <td class="border-bottom-0">
                                            <p class="mb-0 fw-normal">@book.AuthorName</p>
                                        </td>
                                        <td class="border-bottom-0">
                                            <span class="badge category-badge @GetCategoryColor(book.CategoryName) rounded-3 fw-semibold">
                                                @book.CategoryName
                                            </span>
                                        </td>
                                        <td class="border-bottom-0">
                                            <h6 class="fw-semibold mb-0 fs-4">@book.Price.ToString("C2")</h6>
                                        </td>
                                        <td class="border-bottom-0">
                                            <div class="d-flex gap-2">
                                                <a href="@Url.Action("UpdateBook", "AdminBook", new { area = "Admin", id = book.BookId })" class="btn btn-warning btn-sm">
                                                    <i class="ti ti-edit"></i>
                                                </a>
                                                <button class="btn btn-danger btn-sm" onclick="deleteBook(@book.BookId)">
                                                    <i class="ti ti-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- Sayfalama -->
                    @if (Model.Any())
                    {
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <div class="pagination-info">
                                Toplam <strong>@totalItems</strong> kitaptan
                                <strong>@((currentPage - 1) * pageSize + 1)</strong> -
                                <strong>@Math.Min(currentPage * pageSize, totalItems)</strong>
                                arası gösteriliyor
                            </div>
                            <nav aria-label="Page navigation">
                                <ul class="pagination mb-0">
                                    @if (currentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>
                                    }

                                    @for (int i = 1; i <= totalPages; i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                        </li>
                                    }

                                    @if (currentPage < totalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function deleteBook(id) {
        if (confirm('Bu kitabı silmek istediğinizden emin misiniz?')) {
            $.ajax({
                url: "https://localhost:7104/api/Book/DeleteBook/" + id,
                type: 'POST',
                data: { id: id },
                success: function (result) {
                    if (result.success !== false) {
                        location.reload();
                    } else {
                        alert('Kitap silinirken bir hata oluştu!');
                    }
                },
                error: function () {
                    alert('Bir hata oluştu!');
                }
            });
        }
    }
</script>